AWSTemplateFormatVersion: "2010-09-09"
Description: Launches an EC2 instance with a newly created VPC, Subnet, Security Group, Volume and IAM role
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: Jenkins_Key_Pair
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: Please select the type of EC2 instance that  provides higher or lower minimum performance (compute, memory, and storage capabilities)
    Type: String
    AllowedValues:
    - t1.micro
    - t2.micro
    - t2.small
    - t2.medium
    - m3.medium
    - c1.medium
    - c3.large
    - cg1.4xlarge
    Default: t2.micro
    ConstraintDescription: Must be a valid EC2 instance type.
Mappings:
  RegionAMIMap:
    ap-northeast-1:
      AMI: ami-cbf90ecb
    ap-southeast-1:
      AMI: ami-68d8e93a
    ap-southeast-2:
      AMI: ami-fd9cecc7
    eu-central-1:
      AMI: ami-a8221fb5
    eu-west-1:
      AMI: ami-a10897d6
    sa-east-1:
      AMI: ami-b52890a8
    us-east-1:
      AMI: ami-1ecae776
    us-west-1:
      AMI: ami-d114f295
    us-west-2:
      AMI: ami-e7527ed7
Resources:
  EC2ResourcesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.eu-central-1.amazonaws.com/lavinia-dev-nested/EC2Resources.json
      TimeoutInMinutes: 6
  EC2IAMStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.eu-central-1.amazonaws.com/lavinia-dev-nested/IAMwithRolePolicyEC2FullAccess.json
      TimeoutInMinutes: 5
  NewVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 10
      Encrypted: true
      AvailabilityZone: !GetAtt Ec2Instance.AvailabilityZone
      Tags:
      - Key: Name
        Value: EC2 Instance Volume
    DeletionPolicy: Snapshot
  MountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref Ec2Instance
      VolumeId: !Ref NewVolume
      Device: /dev/sdh
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Fn::FindInMap:
          - "RegionAMIMap"
          - Ref: "AWS::Region"
          - "AMI"
      KeyName:
        Ref: "KeyName"
      InstanceType: !Ref InstanceType
      Tags:
      - Key: Name
        Value: EC2 Instance Test
      IamInstanceProfile: !GetAtt EC2IAMStack.Outputs.Profile
      NetworkInterfaces:
      - AssociatePublicIpAddress: 'true'
        DeviceIndex: '0'
        GroupSet:
        - !GetAtt EC2ResourcesStack.Outputs.SecurityGroupId
        SubnetId: !GetAtt EC2ResourcesStack.Outputs.SubnetId

Outputs:
  InstanceId:
    Value: !Ref Ec2Instance
    Description: ID of virtual server
  WebsiteURL:
    Description: The URL pointing the Public IP.
    Value: !Sub http://${Ec2Instance.PublicIp}  
